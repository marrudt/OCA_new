@model Auth.Models.ProveedorOC

@{
    ViewBag.Title = "Crear Nuevo";
}

@using (Html.BeginForm("Create", "ProveedorOC", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Crear Nuevo Proveedor Orden de Compra</legend>
        <div style="width:30%; float:left;">
            <div class="editor-label">
                @Html.LabelFor(model => model.OC)
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.OC, ViewBag.ListaOCs as SelectList, "Seleccione OC", new { required="required" })                    
                    @Html.ValidationMessageFor(model => model.OC)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.NitProveedor)
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.NitProveedor, ViewBag.ListaProveedores as SelectList, "Seleccione Proveedor", new { required="required" })
                    @Html.ValidationMessageFor(model => model.NitProveedor)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IdReferencia)
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.IdReferencia, ViewBag.ListaReferencias as SelectList, "Seleccione Concepto", new { required="required" })
                    @Html.ValidationMessageFor(model => model.IdReferencia)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.fechaOCAM)
                <div class="editor-field">
                    @Html.EditorFor(model => model.fechaOCAM, new { htmlAttributes = new { required ="required" }})
                    @Html.ValidationMessageFor(model => model.fechaOCAM)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.OCAM)
                <div class="editor-field">
                    @Html.EditorFor(model => model.OCAM, new { htmlAttributes = new { @style = "text-transform:uppercase;width:60px", required ="required" } })
                    @Html.ValidationMessageFor(model => model.OCAM)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ValorOCAM)
                <div class="editor-field">
                    @Html.EditorFor(model => model.ValorOCAM)
                    @Html.ValidationMessageFor(model => model.ValorOCAM)
                </div>
            </div>
        </div>

        <div style="width:70%; float:left;">
            <div class="editor-label">
                @Html.LabelFor(model => model.FactProveedor)
                <div class="editor-field">
                    @Html.EditorFor(model => model.FactProveedor, new { htmlAttributes = new { @style = "text-transform:uppercase;width:60px" } })
                    @Html.ValidationMessageFor(model => model.FactProveedor)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ValorFactProv)
                <div class="editor-field">
                    @Html.EditorFor(model => model.ValorFactProv)
                    @Html.ValidationMessageFor(model => model.ValorFactProv)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.fechaFactProv)
                <div class="editor-field">
                    @Html.EditorFor(model => model.fechaFactProv)
                    @Html.ValidationMessageFor(model => model.fechaFactProv)
                </div>
            </div>            

            <div class="editor-label">
                @Html.LabelFor(model => model.notas)
            </div>
            <div class="editor-field" style="width: 100%; height: 75%;">
                @Html.EditorFor(model => model.notas)
                @Html.ValidationMessageFor(model => model.notas)
            </div>
        </div>
    </fieldset>

    <fieldset>
        <div class="editor-label">
            <label>Adjuntos:</label>
        </div>
        <div class="editor-field">
            <input type="file" name="file" multiple="multiple" />
        </div>
    </fieldset>

    <div class="editor-field">
        <input type="submit" value="Crear" class="btn btn-success" />
        <input type="submit" class="btn btn-default" value="Ir al Listado" />
    </div>
}

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*@Scripts.Render("~/bundles/jqueryval")*@
}


